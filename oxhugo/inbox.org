#+TITLE: 码农农场
#+STARTUP： content inlineimages
#+AUTHOR: Evilee
#+PROPERTY: header-args :eval no
#+LANGUAGE: zh-CN
#+OPTIONS: creator:t toc:nil
#+HUGO_BASE_DIR: ../
#+HUGO_AUTO_SET_LASTMOD: f

* COMMENT 计划中的分类
- 计算机
- 书法
- 中国象棋
- 儿童教育

* Blog Posts
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :authorbox true :comments true :toc false :mathjax true
:END:

** Blog
:PROPERTIES:
:EXPORT_HUGO_MENU: :menu main :weight  -50
:EXPORT_FILE_NAME: _index
:END:
这里是我的博客。

** TODO 从零学习 Scheme                                                        :@计算机:Scheme:
** TODO Swift 全栈之路                                                         :@计算机:Swift:
** TODO 打造顺手的终端控制台工作环境                                           :@计算机:tmux:
*** 0x00 用到的材料
1. tmux
2. zsh
3. zplug
4. karabiner-elements
5. xkeysnail
6. xclip

** TODO 在 MacOS 的 Emacs 中使用 RIME 输入法                                   :@计算机:Emacs:RIME:
** TODO 在 Manjaro 的 Emacs 中使用 RIME 输入法                                 :@计算机:Emacs:Linux:
** TODO MacOS 中的 tmux 配置                                                   :@计算机:MacOS:
** TODO Manjaro 中使用 xkeysnail 改变键盘映射                                  :@计算机:Linux:
** TODO 2020 年最稳的翻墙姿势                                                  :@计算机:caddy:v2ray:tls:
:PROPERTIES:
:EXPORT_FILE_NAME: xgfw-in-2020
:END:

caddy + v2ray + tls 配置

** TODO 谈 flutter, react-native 和技术吹                                      :@计算机:
:PROPERTIES:
:EXPORT_FILE_NAME: talk-about-flutter-and-react_native
:END:

** 你的密码就写在脸上                                                          :@计算机:gfw:
:PROPERTIES:
:EXPORT_DATE: 2020-01-09
:EXPORT_FILE_NAME: fuck-more-face-detection
:END:
使用人脸识别的 app 非蠢即坏 － 关于人脸识别的安全隐患。
<!--more-->

曾经，在互联网发展的初期，几乎每个网民都受到过初步的网络安全的知识科普。网络安全
知识第一条：*不要在不同的网站使用同一套密码*。不同网站使用同一套密码有什么安全问
题呢？听我慢慢道来。

1. 假如你在各个网站使用同一套密码，那几乎就是不设防。比如你在某网站 A 上有一个金
   融帐号，作为犯罪分子的我，如何才能把你的钱弄到我的钱包里呢？太简单了，我可以
   做一个网站 B, 吸引你来注册，假如你用同一套用户名和密码，那我就知道了你在 A 网
   站上的用户名和密码，直接登录就可以随便花你的钱了。
2. 也许你会说，怎么可能这么巧，我能在你开发的 B 网站上注册帐号。那我告诉你，互联
   网发生过 N 次大型网站密码库被拖库的事件了，而且据谣言传说这些网站都收到过相关
   部门的照顾，要求必须使用明文存储密码（为啥要明文？参考第一条）。
3. 也许你会说，我是良民，相关部门不会对我做什么。你这么说也非常有道理。但是架不
   住流行网站 C 的技术太差，被黑客拖库啊。那你的 A 信息就到了黑客手里。
4. 也许你会说，C 网站那么有钱，他们开发的系统没有漏洞，黑客没法攻破。须知日防夜
   防家贼难防，堡垒最容易从内部攻破。互联网发展史几十年，不知道有多少公司员工被
   送进了看守所。
5. 党一大代表周佛海都当了叛徒，所以人永远是最大的安全隐患，相关部门也无法避免每
   个党员都恪守党规，遵纪守法，18 big 以来打的老虎可都是在党旗下宣过誓的。

现在大家知道同一套密码的危害了吧？互联网发展到今天，众多 APP 居然开启了人脸识别
认证，这不能不让人怀疑难道是又有相关部门照顾，要求收集人脸数据了？相对于密码，人
脸信息更加不安全。

1. 密码泄漏了，你可以换一个，人脸信息泄漏了，你去整容？
2. 不同的网站可以使用不同的密码，不同的网站能用不同的脸吗？你有几张脸？
3. 密码只有你自己知道，但是人脸大家都能看到，相当于你把密码挂在了脸上。
4. 也许你会说，除了密码外，还有肢体识别呢。别逗了您，知道 deepfake 吗？你可以去
   pxxnhub 上去看看，只要有照片，就可以把脸贴上去。还有 crazytalk 软件，直接根据
   某张照片做出眨眼，摇头，傻乐等各种动作表情，怎么样？
5. 蓬勃发展的过脸黑产已经说明了一切。

所以，强制开启人脸识别的 APP 非蠢即坏。
1. 追新，使用花拳绣腿的功能而不考虑安全后果，这是蠢。
2. 趁着中国个人隐私立法的缺失，搜集用户的人脸数据，将来怎么用凭自己心情，这是坏。

** SE-0272: Package Manager Binary Dependencies                                :@计算机:Swift:
:PROPERTIES:
:EXPORT_FILE_NAME: swift-se0272-accepted
:EXPORT_DATE: 2020-01-09
:END:
SE-0272: Package Manager Binary Dependencies 提案被接受。
<!--more-->
经过漫长的讨论，Swift Package Manager 的二进制文件依赖的提案终于通过了，以后
SwiftPM 终于可以直接管理其他第三方的，无源代码的各种 SDK 了。 继 Cocoapods,
Carthage 之后，SwiftPM 终于成为了一个可用的 iOS 工程管理方案。

** 2020 年最值得学习的新旧语言                                                 :@计算机:
:PROPERTIES:
:EXPORT_FILE_NAME: programming-languages-which-be-worth-to-learn
:EXPORT_DATE: 2019-12-23
:END:
2020 年值得学习的新语言和古董语言。
<!--more-->

1. C: 倚天剑，不解释。
2. Python: 屠龙刀，糙快猛。
3. Rust: 大家都想学。
4. Swift: 简单的 Rust.
5. Scheme: 情怀语言，码农应该把它当情人。

** 在 org-mode 中内嵌源代码                                                    :@计算机:Emacs:org_mode:
:PROPERTIES:
:EXPORT_FILE_NAME: inline-code-block-in-org_mode
:EXPORT_DATE: 2019-12-19
:END:
我们知道在 org-mode 中，单独的源代码块环境是使用 =#+BEGIN_SRC= 和 =#+END_SRC=.
但是在很多情况下，我们可能在一句话中内嵌一句代码，这时候用 =#+BEGIN_SRC= 就无法
做到了。
<!--more-->

org-mode 的内嵌代码块格式是： =src_LANG[headers]{your code}=, 例如：
=src_sh[:exports code]{echo -e "test"}= 的效果是这样的：src_sh[:exports
code]{echo -e "test"}.
=src_xml[:exports code]{<tag>text</tag>}= 的效果是这样的：src_xml[:exports
code]{<tag>text</tag>}.

虽然在博客里面看不出效果，如果导出成 HTML 并且支持语法高亮的话，就会看出来内嵌代
码语句的语法高亮效果了。

** 推荐一个 Rust 教程                                                          :@计算机:Rust:
:PROPERTIES:
:EXPORT_FILE_NAME: recommend-rust-crash-course-tutorial
:EXPORT_DATE: 2019-12-17
:END:

Rust 语言既时尚，又安全，又难学。最让人崩溃的一点是文档虽然多，但是质量却不好，
主要是 Rust 入门的曲线比较陡峭。今天给大家推荐一个曲线不错的教程。

<!--more-->

[[https://www.snoyman.com/blog/2018/10/introducing-rust-crash-course][Rust crash course]] 曲线比较不错，推荐大家阅读。如果有时间，翻译成中文。

** 如何优雅地删除 Git submodule?                                               :@计算机:git:
:PROPERTIES:
:EXPORT_FILE_NAME: how-to-remove-git-submodule-elegantly
:EXPORT_DATE: 2019-12-16
:END:

Git 中没有一个专门的命令对 submodule 进行删除。比较优雅的删除方式如下：

<!--more-->

1. 在 =.gitmodules= 文件中删除关于 xxxx 的 section.
2. 保存 =.gitmodules= 并使用 =git add .gitmoudles= 保存修改。
3. 在 =.git/config= 文件中删除关于 xxxx 模块的配置章节。
4. 运行 =git rm --cached path_to_xxxx_submodule= (没有后面的 "/").
5. 运行 =rm -rf .git/modules/path_to_xxxx_submodule= (没有后面的 "/").
6. 提交修改 =git ci -m "remove xxxx submmodule "= .
7. 删除不用的目录 =rm -rf path_to_xxxx_submodule= .
  
** 把 Markdown 格式的文件转换成 org-mode 格式                                  :@计算机:Emacs:org_mode:markdown:
:PROPERTIES:
:EXPORT_FILE_NAME: convert-markdown-to-org_mode
:EXPORT_DATE: 2019-12-15
:END:

正在把以前的 jekyll 博客迁移到新的 ox-hugo 上，虽然没有几篇，但是如果手工把
markdown 转换成 org-mode 还是有不小的工作量的， 还好有 =pandoc=, 转换完成后稍微
修改一下就可以了。
<!--more-->

#+BEGIN_EXAMPLE
brew install pandoc
pandoc -f markdown -t org xxxx.md -o xxxx.org
#+END_EXAMPLE

** 使用 ox-hugo 编写博客                                                       :@计算机:hugo:org_mode:
:PROPERTIES:
:EXPORT_FILE_NAME: use-ox-hugo-write-blog
:EXPORT_DATE: 2019-12-15
:END:

- [[https://sheishe.xyz/post/hugo-blogging-with-ox-hugo/][一篇很棒的关于 =ox-hugo= 的文章]]
- [[http://www.zmonster.me/2018/02/28/org-mode-capture.html][关于 org-capture 的一篇文章]]

** 解决 Archlinux 的域名解析超时出错的问题                                     :@计算机:ArchLinux:resolved:systemd:
:PROPERTIES:
:EXPORT_FILE_NAME: fix-systemd-resolved-dnssec
:EXPORT_DATE: 2019-12-14
:END:

这个问题困扰了我好久 如果使用 systemd-resovled 启动域名解析服务，在一段时间不访
问网络后重新进行网络访问时经常出现 =Host name not found=.

<!--more-->

解决的方法是在 =/etc/systemd/resolved.conf= 文件中添加:

#+BEGIN_EXAMPLE
DNSSEC=no
#+END_EXAMPLE
